name: Push Docker image to ECR and deploy new version to Elastic Beanstalk

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push
        run: |
          docker build -t 278212569472.dkr.ecr.us-east-1.amazonaws.com/dandi-search-ui:${{ github.sha }} .
          docker push 278212569472.dkr.ecr.us-east-1.amazonaws.com/dandi-search-ui:${{ github.sha }}

      - name: Generate Dockerrun.aws.json file
        run: |
          cat > Dockerrun.aws.json <<EOF
            {
              "AWSEBDockerrunVersion": "1",
              "Image": {
               "Name": "278212569472.dkr.ecr.us-east-1.amazonaws.com/dandi-search-ui:${{ github.sha }}",
               "Update": "true"
              },
              "Ports": [
                 {
                   "ContainerPort": "8000"
                 }
               ]
            }
          EOF
          cat Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: search-ui-dandi
          environment_name: Search-ui-dandi-env-1
          region: us-east-1
          version_label: ${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}-${{ github.run_id }}-$(date +"%Y%m%d%H%M%S")
          deployment_package: Dockerrun.aws.json
          existing_bucket_name: elasticbeanstalk-us-east-1-278212569472